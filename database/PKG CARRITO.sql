--CREACION DE PAQUETES PARA MANEJO DEL CARRITO
CREATE OR REPLACE PACKAGE PKG_CARRITO AS
PROCEDURE SP_GET_CARRITO_USUARIO (DATOS OUT SYS_REFCURSOR, VID IN NUMBER);
PROCEDURE SP_AGREGAR_ARTICULO_CARRITO (P_CARRITO IN NUMBER, P_PRODUCTO IN NUMBER, P_CANTIDAD IN NUMBER);
PROCEDURE SP_ELIMINAR_ARTICULO_CARRITO(
    P_ID IN NUMBER
);
PROCEDURE SP_EDITAR_ARTICULO_CARRITO(
    P_ID_ARTICULO IN NUMBER, 
    P_ID_PRODUCTO IN NUMBER,
    P_CANTIDAD IN NUMBER
);
END;
   
CREATE OR REPLACE PACKAGE BODY PKG_CARRITO AS
 PROCEDURE SP_GET_CARRITO_USUARIO (DATOS OUT SYS_REFCURSOR, VID IN NUMBER) AS
 VCOD NUMBER;
 VMESS VARCHAR2(600);
BEGIN
    OPEN DATOS FOR
    SELECT I.ID_PRODUCTO, I.ID_ARTICULO, I.CANTIDAD, P.NOMBRE, P.PRECIO, (I.CANTIDAD*P.PRECIO) AS SUBTOTAL
    FROM ARTICULOS_CARRITO I
    INNER JOIN PRODUCTOS P
    ON I.ID_PRODUCTO = P.ID_PRODUCTO
    WHERE I.ID_CARRITO = VID;
EXCEPTION
        
    WHEN OTHERS THEN
    VCOD := SQLCODE;
        VMESS:= SQLERRM;
    DBMS_OUTPUT.PUT_LINE(VCOD || ' ' ||  VMESS);
END SP_GET_CARRITO_USUARIO;

    
PROCEDURE SP_AGREGAR_ARTICULO_CARRITO(
    P_CARRITO IN NUMBER,
    P_PRODUCTO IN NUMBER,
    P_CANTIDAD IN NUMBER
) AS
    V_ID_ARTICULO NUMBER;
    VCOD NUMBER;
    VMESS VARCHAR2(600);
    VSQL VARCHAR2(400);
BEGIN
    SELECT SEQ_ARTICULO_CARRITO.NEXTVAL INTO V_ID_ARTICULO FROM DUAL;
    
    VSQL := ' INSERT INTO ARTICULOS_CARRITO (ID_ARTICULO, ID_CARRITO, ID_PRODUCTO, CANTIDAD)
    VALUES (:idArticulo, :idCarrito, :idProducto, :cantidad)';
    EXECUTE IMMEDIATE VSQL USING V_ID_ARTICULO, P_CARRITO, P_PRODUCTO, P_CANTIDAD;
   

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;  
        VCOD := SQLCODE;
        VMESS:= SQLERRM;
        DBMS_OUTPUT.PUT_LINE(VCOD || ' ' ||  VMESS);
END SP_AGREGAR_ARTICULO_CARRITO;

PROCEDURE SP_ELIMINAR_ARTICULO_CARRITO(
    P_ID IN NUMBER
) AS
    VCOD NUMBER;
    VMESS VARCHAR2(600);
    VSQL VARCHAR2(400);
BEGIN
    
    VSQL := ' DELETE FROM ARTICULOS_CARRITO WHERE ID_ARTICULO = :id';
    EXECUTE IMMEDIATE VSQL USING P_ID;

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;  
        VCOD := SQLCODE;
        VMESS:= SQLERRM;
        DBMS_OUTPUT.PUT_LINE(VCOD || ' ' ||  VMESS);
END SP_ELIMINAR_ARTICULO_CARRITO;

PROCEDURE SP_EDITAR_ARTICULO_CARRITO (
    P_ID_ARTICULO IN NUMBER, 
    P_CANTIDAD IN NUMBER
) AS
  VCOD NUMBER;
    VMESS VARCHAR2(600);
    VSQL VARCHAR2(400);
BEGIN
 VSQL := ' UPDATE ARTICULOS_CARRITO SET CANTIDAD = :cantidad, SUBTOTAL = PRECIO*:cantidad WHERE ID_ARTICULO = :id';
    EXECUTE IMMEDIATE VSQL USING P_CANTIDAD, P_ID_ARTICULO;
COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;  
        VCOD := SQLCODE;
        VMESS:= SQLERRM;
        DBMS_OUTPUT.PUT_LINE(VCOD || ' ' ||  VMESS);
END SP_EDITAR_ARTICULO_CARRITO;
END PKG_CARRITO;


COMMIT;









END;

INSERT INTO ARTICULOS_CARRITO VALUES (1, 1, 1, 2);
commit;

EXEC PKG_CARRITO.SP_AGREGAR_ARTICULO_CARRITO(1,1,2);

COMMIT;





