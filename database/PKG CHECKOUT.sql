--CREACION DE SECUENCIA PARA TABLA PEDIDOS_DETALLES
CREATE SEQUENCE SEQ_PEDIDOS_DETALLES 
INCREMENT BY 1 START WITH 1
MAXVALUE 9999 
MINVALUE 1
NOCYCLE
NOCACHE;

COMMIT;


CREATE OR REPLACE PACKAGE PKG_CHECKOUT AS
PROCEDURE SP_EJECUTAR_CHECKOUT (P_CARRITO IN NUMBER, P_ID_USUARIO IN NUMBER, P_METODO_PAGO IN VARCHAR2);
FUNCTION FN_OBTENER_SUBTOTAL_CARRITO (P_CARRITO IN NUMBER) RETURN NUMBER;
END PKG_CHECKOUT;

CREATE OR REPLACE PACKAGE BODY PKG_CHECKOUT AS

    FUNCTION FN_OBTENER_SUBTOTAL_CARRITO (
        P_CARRITO IN NUMBER
    ) RETURN NUMBER
    AS
        V_TOTAL NUMBER;
    BEGIN
        SELECT SUM(A.CANTIDAD * P.PRECIO)
        INTO V_TOTAL
        FROM ARTICULOS_CARRITO A
        INNER JOIN PRODUCTOS P ON A.ID_PRODUCTO = P.ID_PRODUCTO
        WHERE A.ID_CARRITO = P_CARRITO;

        RETURN NVL(V_TOTAL, 0); -- Retorna 0 si no hay art√≠culos
    END FN_OBTENER_SUBTOTAL_CARRITO;

    PROCEDURE SP_EJECUTAR_CHECKOUT (
        P_CARRITO IN NUMBER,
        P_ID_USUARIO IN NUMBER,
        P_METODO_PAGO IN VARCHAR2
    ) AS
        V_SUBTOTAL NUMBER;
        DATOS SYS_REFCURSOR;
        VID NUMBER;
        VID_ARTICULO NUMBER;
        VCANTIDAD NUMBER;
        VNOMBRE VARCHAR2(100);
        VPRECIO NUMBER;
        VSUBTOTAL NUMBER;
        VPEDIDO NUMBER;
    BEGIN
        V_SUBTOTAL := FN_OBTENER_SUBTOTAL_CARRITO(P_CARRITO);

        INSERT INTO PEDIDOS (FECHA, ID_USUARIO, ID_ESTADO, SUBTOTAL, TOTAL, METODO_PAGO)
        VALUES (SYSDATE, P_ID_USUARIO, 3, V_SUBTOTAL, V_SUBTOTAL * 1.13, P_METODO_PAGO);

        VPEDIDO := SEQ_PEDIDOS.CURRVAL;

        PKG_CARRITO.SP_GET_CARRITO_USUARIO(DATOS, P_CARRITO);

        LOOP
            FETCH DATOS INTO VID, VID_ARTICULO, VCANTIDAD, VNOMBRE, VPRECIO, VSUBTOTAL;
            EXIT WHEN DATOS%NOTFOUND;
            INSERT INTO PEDIDOS_DETALLES (
                ID_PEDIDO_DETALLE,
                CANTIDAD,
                ID_PEDIDO,
                ID_PRODUCTO
            )
            VALUES (
                SEQ_PEDIDOS_DETALLES.NEXTVAL,
                VCANTIDAD,
                VPEDIDO,
                VID
            );
            COMMIT;
        END LOOP;
        
        DELETE ARTICULOS_CARRITO WHERE ID_CARRITO = P_CARRITO;
        
        COMMIT;

        CLOSE DATOS;
    END SP_EJECUTAR_CHECKOUT;

END PKG_CHECKOUT;
/


COMMIT;

EXEC PKG_CHECKOUT.SP_EJECUTAR_CHECKOUT(1,13)
--SECUENCIA
CREATE OR REPLACE TRIGGER TG_SECUENCIA_PEDIDOS
    BEFORE INSERT ON PEDIDOS
    FOR EACH ROW
    BEGIN
        SELECT SEQ_PEDIDOS.NEXTVAL INTO :NEW.ID_PEDIDO FROM DUAL;
END ;

COMMIT;


DROP TRIGGER TG_ACTUALIZAR_STOCK_AL_COMPRAR
DROP TRIGGER TG_CALCULAR_SUBTOTAL_TOTAL_PEDIDOS